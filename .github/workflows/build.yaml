name: build
on:
  push:
    branches:
      - '*'
    tags:
      - v*.*.*
      - v*.*.*-rc.*
  pull_request:
jobs:
  build-artifacts:
    name: Build modpack
    runs-on: ubuntu-22.04
    steps:
      - name: Fetch Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # checkout non-detached, so git describe works
      - name: get go for packwiz
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: get go cache env
        id: go-cache-env
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "GOMODCACHE<<$EOF" >> $GITHUB_ENV
          go env GOMODCACHE >> $GITHUB_ENV
          echo "$EOF" >> $GITHUB_ENV
          echo "GOCACHE<<$EOF" >> $GITHUB_ENV
          go env GOCACHE >> $GITHUB_ENV
          echo "$EOF" >> $GITHUB_ENV

      - name: cache go
        uses: actions/cache@v3
        with:
          path: |
            ${{env.GOMODCACHE}}
            ${{env.GOCACHE}}
          key: ${{ runner.os }}-gomod

      - name: install packwiz
        run: go install github.com/packwiz/packwiz@latest

      - name: get version number
        id: find_version
        run: echo "NEW_VERSION=$(git describe --always)" >> $GITHUB_OUTPUT

      - name: Set new version number (default branch or tagged build)
        if: ((github.ref == format('refs/heads/{0}', github.event.repository.default_branch)) || (startsWith(github.ref, 'refs/tags/')))
        run: sed -i "s/version = \"dev\"/version = \"${{steps.find_version.outputs.NEW_VERSION}}\"/g" pack.toml

      - name: Set new version number (PR)
        if: ((github.ref != format('refs/heads/{0}', github.event.repository.default_branch)) && (github.event_name == 'pr'))
        run: sed -i "s/version = \"dev\"/version = \"${{steps.find_version.outputs.NEW_VERSION}}+PR${{ github.ref_name }}\"/g" pack.toml

      - name: Set new version number (Other branch)
        if: ((github.ref != format('refs/heads/{0}', github.event.repository.default_branch)) && (github.event_name != 'pr') && !(startsWith(github.ref, 'refs/tags/')))
        run: sed -i "s/version = \"dev\"/version = \"${{steps.find_version.outputs.NEW_VERSION}}+${{ github.ref_name }}\"/g" pack.toml

      - name: generate hashes
        run: packwiz refresh --build

      - name: upload artifact (packwiz)
        uses: actions/upload-artifact@v3
        with:
          name: "packwiz-modpack"
          path: |
            pack.toml
            index.toml
            mods/
            README.md

      - name: Cache Mods
        id: cache-mods
        uses: actions/cache@v3
        with:
          path: ~/.cache/packwiz/cache
          key: ${{ runner.os }}-packwiz-${{ hashFiles('index.toml') }}
          restore-keys: ${{ runner.os }}-packwiz

      - name: build modrinth format modpack
        run: packwiz modrinth export -o hackclub-modded.mrpack

      - name: upload artifact (modrinth)
        uses: actions/upload-artifact@v3
        with:
          name: "modrinth-modpack"
          path: "hackclub-modded.mrpack"
  release:
    needs: build-artifacts
    if: ${{ github.ref_type == 'tag' }}
    name: Release to modrinth and github
    runs-on: ubuntu-22.04
    steps:
      - name: Fetch Modrinth Modpack
        uses: actions/download-artifact@v3
        with:
          name: modrinth-modpack
      - name: Fetch Packwiz Modpack
        uses: actions/download-artifact@v3
        with:
          name: packwiz-modpack
          path: pw-modpack
      - name: Create hackclubmodpack.zip
        run: zip -rq hackclub-modded-packwiz pw-modpack/  # hackclub-modded-packwiz.zip

      - name: Create Modrinth Release
        if: false
        uses: Kir-Antipov/mc-publish@v3.2
        with:
          modrinth-id: ${{ secrets.MODRINTH_PROJECT }}
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          modrinth-featured: ${{ !(contains(github.ref, '-rc.')) }}
          modrinth-unfeature-mode: ${{ ((contains(github.ref, '-rc.')) && 'none') || 'any' }} # "any" if production deploy, none otherwise
          files-primary: "hackclub-modded.mrpack"
          files-extra: "hackclub-modded-packwiz.zip"
          version-type: ${{ ((contains(github.ref, '-rc.')) && 'beta') || 'release' }}
          game-versions: 1.18.2

      - name: Create Github Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: ${{ !(contains(github.ref, '-rc.')) }}
          prerelease: ${{ contains(github.ref, '-rc.') }}
          files: |
            hackclub-modded.mrpack
            hackclub-modded-packwiz.zip
